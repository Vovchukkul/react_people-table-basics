{"version":3,"sources":["App.tsx","components/Loader/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","linkClass","sex","slug","PeoplePage","useParams","useState","people","setPeople","isLoading","setIsLoading","error","setError","findParent","parent","find","useEffect","data","catch","finally","map","father","fatherName","mother","motherName","born","died","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.879dcc19.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'is-active': isActive },\n);\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-light is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={getLinkClass}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={getLinkClass}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n      <Outlet />\n    </div>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div className=\"section\">\n      <h1 className=\"title mx-5\">Home page</h1>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport { Person } from '../types';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  if (!person) {\n    return null;\n  }\n\n  const { name, sex } = person;\n  const linkClass = sex === 'f'\n    ? 'has-text-danger'\n    : '';\n\n  return (\n    <Link to={`${person?.slug}`} className={linkClass}>\n      {name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\n\nexport const PeoplePage = () => {\n  const { slug } = useParams();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  function findParent(parent: string | null) {\n    return people.find(person => person.name === parent);\n  }\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(data))\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"block\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"box table-container\">\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map((person) => {\n                const father = findParent(person.fatherName);\n                const mother = findParent(person.motherName);\n\n                return (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={classNames({\n                      'has-background-warning': person.slug === slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {mother\n                        ? <PersonLink person={mother} />\n                        : person.motherName || '-'}\n                    </td>\n                    <td>\n                      {father\n                        ? <PersonLink person={father} />\n                        : person.fatherName || '-'}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people.length && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n        </div>\n      )}\n    </div>\n  );\n};\n","import {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/Loader/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}